<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1316.vd2290d3341a_f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2144.v077a_d1928a_40"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2144.v077a_d1928a_40">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.SCMTrigger>
          <spec>* * * * *</spec>
          <ignorePostCommitHooks>false</ignorePostCommitHooks>
        </hudson.triggers.SCMTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3726.v83f8cff396c9">
    <script>pipeline {
    agent any
     stages {   
        stage(&apos;Checkout&apos;) {
            steps {
                git url: &apos;https://github.com/iSaadiqbal/jgsu-spring-petclinic.git&apos;, branch: &apos;main&apos; }            
        }
        stage(&apos;compile&apos;) {
            steps {sh &apos;./mvnw clean compile&apos;}
        }
        stage(&apos;Build&apos;) {
            steps {sh &apos;./mvnw clean package&apos;}
        }
        stage(&apos;test logs&apos;) {
            steps { junit &apos;**/target/surefire-reports/TEST-*.xml&apos;}
        }
        stage(&apos;download logs&apos;) { 
            steps {archiveArtifacts &apos;target/*.jar&apos; }
        }
     //   stage(&apos;Generate JSON&apos;) {
     //       steps {
     //          script {
     //               def pipelineInfo = [
      //                  jobName: &quot;${JOB_NAME}&quot;,
     //                   buildNumber: &quot;${BUILD_NUMBER}&quot;,
     //                   buildResult: &quot;${currentBuild.result}&quot;,
    ////                    buildUrl: &quot;${BUILD_URL}&quot;,
     ///                   pipelineScript: readFileFromWorkspace(&apos;Jenkinsfile&apos;)
    //  //              ]
    //                def jsonFilePath = &quot;${WORKSPACE}/pipeline_info.json&quot;
     //               writeFile file:&quot;${WORKSPACE}&quot;, text: groovy.json.JsonOutput.toJson(pipelineInfo)

      //              echo &quot;JSON File Generated: ${jsonFilePath}&quot;
            //    }
     //       }
     //  }

         
         
     }
    
    
    
    
    
     post {
          always {
             emailext (
                       subject: &quot;Job &apos;${JOB_NAME}&apos; (build ${BUILD_NUMBER}) ${currentBuild.result}&quot;,
                        body: &quot;Please go to ${BUILD_URL} and verify the build&quot;, 
                        attachLog: true, 
                        to: &quot;saad89.linux@gmail.com&quot;, 
                    )     
                }
            }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <quietPeriod>0</quietPeriod>
  <disabled>false</disabled>
</flow-definition>